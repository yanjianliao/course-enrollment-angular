{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-lists/topic-lists.component.css","webpack:///./src/app/topic-lists/topic-lists.component.html","webpack:///./src/app/topic-lists/topic-lists.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"a{\\n  margin: 10px;\\n}\\n\\nlabel{\\n  margin-top: 10px;\\n}\\n\\ninput{\\n  margin-top: 10px;\\n}\\n\\nbutton {\\n\\n  margin-left: 10px;\\n}\\n\\n.btn-block {\\n  margin-top: 10px;\\n}\\n\"","module.exports = \"<h3> Input new Section information here</h3>\\n<div class=\\\"form-group row\\\">\\n    <label for=\\\"sectionName\\\" class=\\\"col-sm-2 col-form-label\\\">\\n      <strong>name</strong>\\n    </label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input placeholder=\\\"Section Name\\\"\\n             [(ngModel)]=\\\"sectionName\\\"\\n             id=\\\"sectionName\\\"\\n             class=\\\"form-control\\\">\\n    </div>\\n\\n    <label for=\\\"seats\\\" class=\\\"col-sm-2 col-form-label\\\">\\n      <strong>seats</strong>\\n    </label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input placeholder=\\\"seats\\\"\\n             [(ngModel)]=\\\"seats\\\"\\n             id=\\\"seats\\\"\\n             class=\\\"form-control\\\">\\n    </div>\\n\\n\\n\\n</div>\\n<hr>\\n<h3>Edit selected Section information here</h3>\\n<div class=\\\"form-group row\\\">\\n  <label for=\\\"newSectionName\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    <strong>newSectionName</strong>\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input placeholder=\\\"Section Name\\\"\\n           [(ngModel)]=\\\"newSectionName\\\"\\n           id=\\\"newSectionName\\\"\\n           class=\\\"form-control\\\">\\n  </div>\\n<!--<h1>{{newSeats}}</h1>-->\\n  <label for=\\\"newSeats\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    <strong>newSeats</strong>\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input placeholder=\\\"seats\\\"\\n           [(ngModel)]=\\\"newSeats\\\"\\n           id=\\\"newSeats\\\"\\n           class=\\\"form-control\\\">\\n  </div>\\n\\n\\n  <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"updateSection()\\\">\\n    save updates for this section\\n  </button>\\n\\n\\n</div>\\n\\n<hr>\\n\\n<div *ngFor=\\\"let course of courses\\\">\\n\\n  <h3>Course: {{course.title}}</h3>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of course.sections\\\" class=\\\"list-group-item\\\">\\n      name : {{section.name}}\\n      seats : {{section.seats}}\\n      <button class=\\\"btn btn-danger float-right\\\" (click)=\\\"deleteSection(section._id)\\\">\\n        delete\\n      </button>\\n      <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"selectSection(section)\\\">\\n        select to edit\\n      </button>\\n    </li>\\n  </ul>\\n\\n\\n\\n  <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"createSection(course.id)\\\">\\n    add new sections for this course\\n  </button>\\n\\n  <hr>\\n</div>\\n\\n\\n<div class=\\\"row float-right\\\">\\n  <a  routerLink=\\\"/profile\\\"><h3>Profile</h3></a>\\n  <a  routerLink=\\\"/home\\\"><h3>Home</h3></a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Course} from '../models/course.model.client';\nimport CourseServiceClient from '../services/course.service.client';\nimport SectionServiceClient from '../services/section.service.client';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private courseService: CourseServiceClient,\n              private sectionService: SectionServiceClient) { }\n\n  courses = [];\n  sectionName: String;\n  newSectionName: String;\n  seats: Number;\n  newSeats: Number;\n  selectedSection;\n\n  ngOnInit() {\n    this.findAllCourses();\n  }\n\n  findAllCourses() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses)\n      .then(() => {\n        console.log(this.courses);\n        for (let i = 0; i < this.courses.length; i++) {\n          // this.courses[i].sections\n          const courseId = this.courses[i].id;\n          this.sectionService\n            .findSectionsForCourse(courseId)\n            .then(sections => this.courses[i].sections = sections);\n        }\n      });\n  }\n\n  deleteSection(sectionId) {\n    this.sectionService\n      .deleteSection(sectionId)\n      .then(() => this.findAllCourses());\n  }\n\n  createSection(courseId) {\n    this.sectionService\n      .createSection(this.sectionName, this.seats, courseId)\n      .then(() => this.findAllCourses());\n  }\n\n  selectSection(section) {\n   this.selectedSection = section;\n   this.newSectionName = section.name;\n   this.newSeats = section.seats;\n  }\n\n  updateSection() {\n    const newSection = this.selectedSection;\n    newSection.name = this.newSectionName;\n    newSection.seats = this.newSeats;\n    // console.log(newSection, this.newSeats);\n    this.sectionService.updateSection(newSection)\n      .then(() => this.findAllCourses());\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport CourseServiceClient from './services/course.service.client';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport {routing} from './app.routing';\nimport {FormsModule} from '@angular/forms';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport ModuleServiceClient from './services/module.service.client';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport { RegisterComponent } from './register/register.component';\nimport UserServiceClient from './services/user.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport SectionServiceClient from './services/section.service.client';\nimport { TopicListsComponent } from './topic-lists/topic-lists.component';\nimport TopicServiceClient from './services/topic.service.client';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport WidgetServiceClient from './services/widget.service.client';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CourseGridComponent,\n    WhiteBoardComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    SectionListComponent,\n    TopicListsComponent,\n    WidgetListComponent,\n    AdminPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule\n  ],\n  providers: [\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    UserServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {RouterModule, Routes} from '@angular/router';\nimport {WhiteBoardComponent} from './white-board/white-board.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {AdminPageComponent} from './admin-page/admin-page.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'adminPage', component: AdminPageComponent},\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent},\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent},\n  { path: 'course/:courseId/section', component: SectionListComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent},\n  { path: '**', component: WhiteBoardComponent}\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin-top: 20px;\\n}\\n\\na{\\n  margin-left: 10px;\\n}\\n\"","module.exports = \"<h2>Course grid {{courses.length}} </h2>\\n\\n\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\" class=\\\"btn btn-primary\\\">\\n          Contents\\n        </a>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-primary\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"row float-right\\\">\\n  <a  routerLink=\\\"/profile\\\"><h3>Profile</h3></a>\\n  <a  routerLink=\\\"/home\\\"><h3>Home</h3></a>\\n  <a routerLink=\\\"/login\\\"><h3>Login</h3></a>\\n  <a routerLink=\\\"/register\\\"><h3>Register</h3></a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport CourseServiceClient from '../services/course.service.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private courseService: CourseServiceClient) { }\n\n  courses = [];\n\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"button {\\n  margin: 20px;\\n}\\nh2 {\\n  margin: 20px;\\n}\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div  class=\\\"col-1\\\">\\n    <a routerLink=\\\"/\\\">\\n      <button class=\\\"btn btn-dark\\\">\\n        Go Back\\n      </button>\\n    </a>\\n  </div>\\n  <div class=\\\"col-11\\\">\\n    <h2>{{course.title}}</h2>\\n  </div>\\n\\n</div>\\n\\n<app-module-list></app-module-list>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport CourseServiceClient from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private service: CourseServiceClient) {\n    this.route.params.subscribe(\n      params => this.loadCourse(params.courseId)\n    );\n  }\n  course: Course = new Course();\n\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"#btn-group {\\n  margin-left: 5px;\\n}\\n\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\" class=\\\"nav-item\\\">\\n    <a\\n      class=\\\"nav-link\\\"\\n      [ngClass]=\\\"{'active': lesson.id == params.lessonId}\\\"\\n      routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-topic-lists></app-topic-lists>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonServiceClient} from '../services/lesson.service.client';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private lessonService: LessonServiceClient) {\n\n    this.route.params.subscribe(\n      params => this.findLessonsForModule(params)\n    );\n  }\n\n  params;\n  moduleId: number;\n  courseId: number;\n  lessonId: number;\n  lessons = [];\n\n  findLessonsForModule(params) {\n    this.params = params;\n    this.courseId = params.courseId;\n    this.moduleId = params.moduleId;\n    this.lessonId = params.lessonId;\n    if (!this.moduleId) {\n      return;\n    }\n\n    this.lessonService.findLessonsForModule(this.courseId, this.moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input {\\n  margin: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"\\n  />\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"\\n  />\\n\\n\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-success\\\"\\n  >\\n    Login\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport UserServiceClient from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login(username, password) {\n\n    if (!password || !username) {\n      alert('Can not be empty');\n      return;\n    }\n\n    this.userService.login(username, password)\n      .then(user => {\n        if (user.error) {\n          alert('Invalid password or username');\n        } else {\n          this.router.navigate(['profile']);\n        }\n      });\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n  lessons: [{}];\n  sections: [{}];\n}\n","export class User {\n  username: String;\n  password: String;\n  firstName: String;\n  lastName: String;\n  email: String;\n  phone: String;\n  address: String;\n  error: String;\n  _id: String;\n  role: String;\n}\n","module.exports = \".active-module {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.active-element {\\n  background-color: #9fcdff;\\n}\\n\\na {\\n  color: black;\\n}\\n\\nli{\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active-module\\\"> modules </li>\\n      <li *ngFor=\\\"let module of modules\\\"\\n          [ngClass]=\\\"{'active-element': params.moduleId == module.id}\\\"\\n          class=\\\"list-group-item web-dev\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}/\\\">\\n          {{module.title}}\\n        </a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport ModuleServiceClient from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private moduleService: ModuleServiceClient) {\n    this.route.params.subscribe(\n      params => this.onParamsChange(params)\n    );\n  }\n\n  courseId: number;\n  modules = [];\n  params;\n\n  ngOnInit() {\n  }\n\n  onParamsChange(params) {\n\n    this.params = params;\n    this.findModulesForCourse(params.courseId);\n  }\n\n  findModulesForCourse(courseId) {\n    this.courseId = courseId;\n    this.moduleService.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n\n}\n","module.exports = \"input {\\n  margin-top: 20px;\\n}\\nlabel {\\n  margin-top: 20px;\\n}\\n.btn-block {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n}\\n.hidden {\\n  background-color: black;\\n}\\nh1 {\\n  text-align: center;\\n}\\n.active-module {\\n  background-color: black;\\n  color: white;\\n}\\nli{\\n  text-align: center;\\n}\\na{\\n  margin: 10px;\\n}\\n\\n\"","module.exports = \"<h1>Profile</h1>\\n\\n\\n\\n\\n<div class=\\\"form-group row\\\">\\n  <label for=\\\"inputUsername\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    Username\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"inputUsername\\\" placeholder=\\\"Username\\\"  [(ngModel)]=\\\"user.username\\\">\\n  </div>\\n\\n  <label for=\\\"inputPassword\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    Password\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\"  [(ngModel)]=\\\"user.password\\\">\\n  </div>\\n\\n  <label for=\\\"firstName\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    firstName\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"firstName\\\"  [(ngModel)]=\\\"user.firstName\\\">\\n  </div>\\n\\n  <label for=\\\"lastName\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    lastName\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"lastName\\\"  [(ngModel)]=\\\"user.lastName\\\">\\n  </div>\\n\\n  <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    email\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"email\\\"  [(ngModel)]=\\\"user.email\\\">\\n  </div>\\n\\n  <label for=\\\"phone\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    phone\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"phone\\\" placeholder=\\\"phone\\\"  [(ngModel)]=\\\"user.phone\\\">\\n  </div>\\n  <label for=\\\"address\\\" class=\\\"col-sm-2 col-form-label\\\">\\n    address\\n  </label>\\n  <div class=\\\"col-sm-10\\\">\\n    <input class=\\\"form-control\\\" id=\\\"address\\\" placeholder=\\\"address\\\"  [(ngModel)]=\\\"user.address\\\">\\n  </div>\\n\\n\\n</div>\\n\\n\\n\\n<ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item active-module\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-8\\\">\\n          <strong>sections list</strong>\\n        </div>\\n\\n      </div>\\n\\n    </li>\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-8\\\">\\n          {{section.section.name}}\\n        </div>\\n\\n        <div class=\\\"col-4\\\">\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"dropSection(section)\\\">\\n            Drop Section\\n          </button>\\n        </div>\\n      </div>\\n    </li>\\n\\n</ul>\\n\\n<button class=\\\"btn btn-primary btn-block \\\"\\n        (click)=\\\"updateProfile()\\\">\\n  Update\\n</button>\\n\\n<button class=\\\"btn btn-danger btn-block\\\"\\n        (click)=\\\"logout()\\\">\\n  Logout\\n</button>\\n\\n<button (click)=\\\"deleteProfile()\\\" class=\\\"btn btn-dark btn-block\\\">\\n  Delete Profile\\n</button>\\n\\n<div class=\\\"row float-right\\\">\\n  <a *ngIf=\\\"user.role == 'admin'\\\" routerLink=\\\"/adminPage\\\"><h3>Admin Page</h3></a>\\n  <a  routerLink=\\\"/home\\\"><h3>Home</h3></a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport UserServiceClient from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport SectionServiceClient from '../services/section.service.client';\nimport {User} from '../models/user.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  user = new User();\n  sections = [];\n\n\n  ngOnInit() {\n    this.loadProfile();\n  }\n\n  loadProfile() {\n    this.userService\n      .profile()\n      .then(user => {\n        this.user = user;\n      });\n    this.sectionService\n      .findSectionForStudent()\n      .then(sections => this.sections = sections);\n\n  }\n\n\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() => this.router.navigate(['login']));\n  }\n\n  updateProfile() {\n    this.userService\n      .updateProfile(this.user)\n      .then(() => alert('Updated!'));\n  }\n\n\n  dropSection(enrollment) {\n    console.log(enrollment.student, enrollment.section._id);\n\n    const temp = {\n      student: enrollment.student,\n      section: enrollment.section._id\n    };\n    this.sectionService\n      .dropSection(temp)\n      .then(() => {\n        alert('Dropped!');\n        this.sectionService\n          .findSectionForStudent()\n          .then(sections => this.sections = sections);\n      });\n\n  }\n\n  deleteProfile() {\n    this.userService.deleteProfile(this.user)\n      .then(() => {\n        alert('Deleted!');\n        this.loadProfile();\n      });\n  }\n\n}\n","module.exports = \"input {\\n  margin: 10px;\\n}\\n\"","module.exports = \"<h1>Register</h1>\\n\\n<input [(ngModel)]=\\\"username\\\"\\n       placeholder=\\\"username\\\"\\n       class=\\\"form-control\\\"\\n/>\\n<input [(ngModel)]=\\\"password\\\"\\n       placeholder=\\\"password\\\"\\n       class=\\\"form-control\\\"\\n/>\\n\\n<input [(ngModel)]=\\\"password2\\\"\\n       placeholder=\\\"password\\\"\\n       class=\\\"form-control\\\"\\n/>\\n\\n\\n<button (click)=\\\"createUser()\\\"\\n        class=\\\"btn btn-success\\\"\\n>\\n  Register\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport UserServiceClient from '../services/user.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {User} from '../models/user.model.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private router: Router) { }\n\n  username: String;\n  password: String;\n  password2: String;\n\n  createUser() {\n\n    if (this.password !== this.password2) {\n      alert('Two passwords should be same');\n      return;\n    }\n\n    this.userService.createUser(this.username, this.password)\n      .then((user: User) => {\n\n        if (user.error) {\n          alert(user.error);\n          return;\n        }\n\n        this.router.navigate(['profile']);\n\n      });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".list-group {\\n  margin-top: 30px;\\n}\\n\"","module.exports = \"<h1>Sections for course: {{courseId}}</h1>\\n\\n\\n<ul class=\\\"list-group\\\">\\n\\n  <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n    name : {{section.name}}\\n    seats : {{section.seats}}\\n\\n    <button (click)=\\\"enroll(section)\\\"\\n            class=\\\"btn btn-primary float-right\\\">\\n      Enroll\\n    </button>\\n  </li>\\n\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport SectionServiceClient from '../services/section.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private sectionService: SectionServiceClient,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.params.subscribe(\n      params => this.setParams(params)\n    );\n  }\n\n  sectionName: String;\n  seats: String;\n  courseId: String;\n  sections = [];\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.courseId = params.courseId;\n    this.loadSection();\n\n  }\n\n  loadSection() {\n    this.sectionService\n      .findSectionsForCourse(this.courseId)\n      .then(sections => this.sections = sections);\n  }\n\n\n  enroll(section) {\n    this.sectionService\n      .enrollStudentInSection(section._id)\n      .then(() => this.router.navigate(['profile']));\n  }\n\n}\n","export default class CourseServiceClient {\n\n  COURSE_URL = 'https://first-yanjianliao.herokuapp.com/api/course/';\n\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n\n\n  findCourseById(id) {\n    return fetch(this.COURSE_URL + id )\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n\n  LESSON_URL = 'https://first-yanjianliao.herokuapp.com/api/course/';\n\n  findLessonsForModule(courseId, moduleId) {\n    console.log(this.LESSON_URL + courseId + /module/ + moduleId + '/lesson');\n    return fetch(this.LESSON_URL + courseId + /module/ + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","export default class ModuleServiceClient {\n  LESSON_URL = 'https://first-yanjianliao.herokuapp.com/api/course/';\n  SINGLE_URL = 'https://first-yanjianliao.herokuapp.com/api/lesson/';\n\n\n  findModulesForCourse(id) {\n    return fetch(this.LESSON_URL + id + '/module')\n      .then(response => response.json());\n  }\n}\n","export default class SectionServiceClient {\n  SECTION_URL = 'http://localhost:3000/api/course/CID/section';\n  BASE_URL = 'http://localhost:3000/api/';\n\n  enrollStudentInSection(sectionId) {\n    const url = this.BASE_URL + 'section/' + sectionId + '/enrollment';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    }).then(response => response.json());\n  }\n\n  findSectionForStudent() {\n    const url = this.BASE_URL + 'student/section';\n    return fetch(url, {\n      method: 'get',\n      credentials: 'include'\n    }).then(response => response.json());\n  }\n\n\n  createSection(sectionName, seats, courseId) {\n    const section = {\n      name: sectionName,\n      seats: seats,\n      courseId: courseId\n    };\n\n    return fetch(this.SECTION_URL.replace('CID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('CID', courseId))\n      .then(response => response.json());\n  }\n\n\n  dropSection(enrollment) {\n    return fetch(this.BASE_URL + 'student/' + enrollment.student + '/section/' + enrollment.section , {\n      method: 'delete',\n      credentials: 'include'\n    });\n  }\n\n  deleteSection(sectionId) {\n    return fetch(this.BASE_URL + 'section/' + sectionId, {\n      method: 'delete',\n      credentials: 'include'\n    });\n  }\n\n  updateSection(section) {\n    // console.log(section);\n    return fetch(this.BASE_URL + 'section/' + section._id, {\n      method: 'put',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(section),\n    });\n  }\n\n\n}\n","export default class TopicServiceClient {\n  LESSON_URL = 'https://first-yanjianliao.herokuapp.com/api/course/';\n\n  findTopicsForLesson(courseId, moduleId, lessonId) {\n    return fetch(this.LESSON_URL + courseId + '/module/' + moduleId + '/lesson/' + lessonId + '/topic')\n      .then(response => response.json());\n  }\n}\n","export default class UserServiceClient {\n\n  USER_URL = 'http://localhost:3000/api';\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(this.USER_URL + '/user', {\n      method: 'post',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n  login(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch(this.USER_URL + '/login', {\n      method: 'post',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    });\n  }\n\n  profile() {\n    return fetch(this.USER_URL + '/profile', {\n      credentials: 'include'\n    }).then(response => response.json());\n  }\n\n  logout() {\n    return fetch(this.USER_URL + '/logout', {\n      credentials: 'include'\n    });\n  }\n\n  updateProfile(user) {\n    return fetch(this.USER_URL + '/profile', {\n      method: 'put',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user),\n    });\n  }\n\n  deleteProfile(user) {\n    console.log(this.USER_URL + '/profile');\n    return fetch(this.USER_URL + '/profile', {\n      method: 'delete',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user),\n    });\n  }\n\n}\n","export default class WidgetServiceClient {\n  WIDGET_API = 'https://first-yanjianliao.herokuapp.com/api/topic/';\n\n  findWidgetsForTopic(topicId) {\n    return fetch(this.WIDGET_API + topicId + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \"button {\\n  margin: 10px;\\n}\\n\\n.active-button{\\n  background-color: black;\\n}\\n\"","module.exports = \"<div class=\\\"btn-group container\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n  <a  *ngFor=\\\"let topic of topics\\\"\\n      routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n    <button [ngClass]=\\\"{'active-button': topic.id == params.topicId}\\\"\\n            class=\\\"btn btn-secondary\\\">\\n      {{topic.title}}\\n    </button>\\n  </a>\\n</div>\\n<hr>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport TopicServiceClient from '../services/topic.service.client';\n\n@Component({\n  selector: 'app-topic-lists',\n  templateUrl: './topic-lists.component.html',\n  styleUrls: ['./topic-lists.component.css']\n})\nexport class TopicListsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private topicService: TopicServiceClient) {\n\n    this.route.params.subscribe(\n      params => {\n        this.setParams(params);\n      }\n    );\n\n\n  }\n\n  params;\n  courseId: number;\n  moduleId: number;\n  lessonId: number;\n  topics = [];\n\n  ngOnInit() {\n  }\n\n\n  setParams(params) {\n    this.params = params;\n    this.courseId = params.courseId;\n    this.moduleId = params.moduleId;\n    this.lessonId = params.lessonId;\n    if (!this.lessonId) {return; }\n\n    this.loadTopics();\n  }\n\n  loadTopics() {\n    this.topicService\n      .findTopicsForLesson(this.courseId, this.moduleId, this.lessonId)\n      .then(topics => this.topics = topics);\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h2>\\n  White board\\n</h2>\\n\\n<app-course-grid></app-course-grid>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img {\\n  width: 300px;\\n}\\n\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n\\n  <div class=\\\"row\\\">\\n    <h3 class=\\\"col-4\\\">{{widget.name}}</h3>\\n    <p><em>({{widget.widgetType}} widget)</em></p>\\n  </div>\\n\\n  <div *ngIf=\\\"widget.widgetType == 'Heading'\\\">\\n    <h1 *ngIf=\\\"widget.size == '1'\\\">{{widget.text}}</h1>\\n    <h2 *ngIf=\\\"widget.size == '2'\\\">{{widget.text}}</h2>\\n    <h3 *ngIf=\\\"widget.size == '3'\\\">{{widget.text}}</h3>\\n  </div>\\n\\n\\n  <div *ngIf=\\\"widget.widgetType == 'List'\\\">\\n    <ol *ngIf=\\\"widget.listType == 'ordered' && widget.listItems\\\">\\n      <li *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n        {{item}}\\n      </li>\\n    </ol>\\n    <ul *ngIf=\\\"widget.listType == 'unordered' && widget.listItems\\\">\\n      <li *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n        {{item}}\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div *ngIf=\\\"widget.widgetType == 'Image'\\\">\\n    <img src=\\\"{{widget.src}}\\\" alt=\\\"\\\">\\n  </div>\\n\\n  <div *ngIf=\\\"widget.widgetType == 'Link'\\\">\\n    <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n  </div>\\n\\n  <div *ngIf=\\\"widget.widgetType == 'Paragraph'\\\">\\n    {{widget.text}}\\n  </div>\\n\\n  <hr>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport WidgetServiceClient from '../services/widget.service.client';\nimport {p} from '@angular/core/src/render3';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute,\n              private widgetService: WidgetServiceClient) {\n    this.route.params.subscribe(\n      params => this.setParams(params)\n    );\n\n\n  }\n\n  params;\n  widgets = [];\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    if (!params.topicId) {\n      return;\n    }\n    this.params = params;\n    this.loadWidgets(params.topicId);\n  }\n\n  loadWidgets(topicId) {\n    this.widgetService\n      .findWidgetsForTopic(topicId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}